name: Deploy to EC2 via Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Remove old project on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.250.1.39 "sudo rm -rf ~/laravel_app"

      - name: Copy project to EC2 via rsync
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.250.1.39 "mkdir -p ~/laravel_app/src"
          # Thay vì dùng path tuyệt đối, deploy vào cùng cấp:
          rsync -avz ./src/ ubuntu@13.250.1.39:~/laravel_app/src
          rsync -avz ./docker-compose.yml ubuntu@13.250.1.39:~/laravel_app/docker-compose.yml
          rsync -avz ./Dockerfile ubuntu@13.250.1.39:~/laravel_app/Dockerfile
          rsync -avz ./nginx ubuntu@13.250.1.39:~/laravel_app/nginx
          
      - name: Install Docker Compose plugin (if needed)
        run: |
          ssh ubuntu@13.250.1.39 << 'EOF'
            mkdir -p ~/.docker/cli-plugins
            curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 \
              -o ~/.docker/cli-plugins/docker-compose
            chmod +x ~/.docker/cli-plugins/docker-compose
          EOF
      - name: Build and run docker on EC2
        run: |
          ssh ubuntu@13.250.1.39 << 'EOF'
            cd ~/laravel_app
            # Dừng và xóa các container cũ
            docker compose down --remove-orphans

            # Xóa các container còn sót lại nếu có
            docker rm -f vite-dev laravel_app nginx_server mysql_db || true

            docker compose down

            # Build và chạy lại
            docker compose up --build -d

            # Chờ container khởi động xong (tránh lỗi restart loop)
            sleep 20

            # Kiểm tra nếu file .env.example tồn tại thì copy
            docker exec -w /var/www laravel_app/src sh -c 'test -f .env.example && cp .env.example .env || echo ".env.example not found, skipping"'

            # Chạy composer + key + migrate nếu container ổn
            docker exec -w /var/www laravel_app/src composer install || true
            docker exec -w /var/www laravel_app/src php artisan key:generate || true
            docker exec -w /var/www laravel_app/src php artisan migrate --force || true
            docker exec -w /var/www laravel_app/src chown -R www-data:www-data storage bootstrap/cache || true
            docker exec -w /var/www laravel_app/src chmod -R 775 storage bootstrap/cache || true
            docker exec -w /var/www laravel_app/src php artisan config:cache || true
            docker exec -w /var/www laravel_app/src php artisan route:cache || true
          EOF
